services:
  auth_microservice:
    container_name: auth_microservice
    build:
      context: ../auth_microservice
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - telegramm_network
    # depends_on:
    #   # - user_microservice
    env_file: ../auth_microservice/.env

  user_microservice:
    container_name: user_microserice
    build:
      context: ../user_microservice
      dockerfile: Dockerfile
    ports:
      - "50052:50052"
    restart: always
    networks:
      - telegramm_network
    depends_on:
      - mysql_server
    env_file: ../user_microservice/.env
    environment:
      DATABASE_URL: mysql://admin:admin@mysql_server:3306/telegramm

  session_microservice:
    container_name: session_microservice
    build:
      context: ../session_microservice
      dockerfile: Dockerfile
    ports:
      - "50053:50053"
    networks:
      - telegramm_network
    depends_on:
      - redis_server
    env_file: ../session_microservice/.env

  gateway_microservice:
    container_name: gateway_microservice
    build:
      context: ../gateway_microservice
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    networks:
      - telegramm_network
    depends_on:
      - session_microservice
      # - user_microservice
      - auth_microservice
    env_file: ../gateway_microservice/.env

  web_server:
    image: nginx
    volumes:
      - ../nginx_proxy_server/templates:/etc/nginx/templates
      - ../nginx_proxy_server/config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    networks:
      - telegramm_network
    depends_on:
      - session_microservice
      # - user_microservice
      - auth_microservice

  mysql_server:
    image: mysql:latest
    container_name: mysql_server
    env_file:
      - ../config/mysql.env
    ports:
      - "3306:3306"
    volumes:
      - ../data/mysql_data:/var/lib/mysql
    networks:
      - telegramm_network

  redis_server:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    volumes:
      - ../data/redis_data:/data
    networks:
      - telegramm_network

networks:
  telegramm_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data: