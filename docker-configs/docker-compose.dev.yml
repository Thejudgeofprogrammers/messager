services:
  auth_microservice:
    container_name: auth_microservice
    build:
      context: ../auth_microservice
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - user_microservice
    env_file: ../auth_microservice/.env
    networks:
      - mynetwork

  user_microservice:
    container_name: user_microservice
    build:
      context: ../user_microservice
      dockerfile: Dockerfile
    ports:
      - "50052:50052"
    restart: always
    depends_on:
      - postgres_server
    env_file: ../user_microservice/.env
    networks:
      - mynetwork

  session_microservice:
    container_name: session_microservice
    build:
      context: ../session_microservice
      dockerfile: Dockerfile
    ports:
      - "50053:50053"
    depends_on:
      - redis_server
    env_file: ../session_microservice/.env
    networks:
      - mynetwork

  gateway_microservice:
    container_name: gateway_microservice
    build:
      context: ../gateway_microservice
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    depends_on:
      - session_microservice
      - user_microservice
      - auth_microservice
    env_file: ../gateway_microservice/.env
    networks:
      - mynetwork

  web_server:
    image: nginx
    volumes:
      - ../nginx_proxy_server/templates:/etc/nginx/templates
      - ../nginx_proxy_server/config/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:80"
    environment:
      - NGINX_HOST=foobar.com
      - NGINX_PORT=80
    depends_on:
      - session_microservice
      - user_microservice
      - auth_microservice
    networks:
      - mynetwork

  postgres_server:
    image: postgres:latest
    container_name: postgres_server
    env_file:
      - ../config/postgre.env
    ports:
      - "5432:5432"
    volumes:
      - ../data/postgres_data:/var/lib/postgresql/data
    networks:
      - mynetwork

  redis_server:
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    environment:
      - REDIS_HOST=redis_server
      - REDIS_PORT=6379
    volumes:
      - ../data/redis_data:/data
    networks:
      - mynetwork

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - "9090:9090"
  #   volumes:
  #     - ../prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   depends_on:
  #     - grafana

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - "4050:3000"
  #   depends_on:
  #     - user_microservice
  #     - auth_microservice
  #     - gateway_microservice
  #     - session_microservice
  #   env_file:
  #     - ../config/grafana.env

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres_data:
  redis_data: